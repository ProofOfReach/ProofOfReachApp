# Add Bitcoin-to-USD Price Conversion Display for Nostr Ads Marketplace MVP

## Overview
Implement a simple BTC/USD price conversion feature that displays approximate USD equivalents alongside Bitcoin/sats amounts throughout the platform. This should be for display purposes only in the MVP, without enabling actual USD transactions.

## Requirements

### Price API Integration
1. Create a price service using the CoinGecko API
   - Endpoint: https://api.coingecko.com/api/v3/simple/price?ids=bitcoin&vs_currencies=usd
   - Add appropriate error handling and fallback values
   - Implement caching to limit API calls (refresh every 5-15 minutes)
   - Store timestamp of last successful price update

### Currency Display Utility
1. Create a utility function to convert between sats and USD for display
   - Input: amount in sats
   - Output: formatted string with approximate USD value
   - Example: formatWithUsd(10000) → "10,000 sats (~$5.20 USD)"

2. Create a utility function for displaying prices based on user preference
   - Allow toggling between primary currencies
   - Format: "Primary Currency (Secondary Currency)"
   - Example: displayAmount(10000, 'BTC') → "10,000 sats (~$5.20 USD)"
   - Example: displayAmount(10000, 'USD') → "$5.20 USD (~10,000 sats)"

### UI Components
1. Add a small currency toggle component
   - Simple toggle between BTC and USD as primary display currency
   - Store user preference in local storage

2. Update amount displays throughout the application
   - Campaign budgets
   - Bid amounts
   - Publisher earnings
   - Transaction history
   - Include a small "approximate" indicator for USD values

3. Add exchange rate display in footer or header
   - Show current BTC/USD exchange rate
   - Include "Last updated" timestamp

### Database Changes
1. No database schema changes needed for MVP
   - Continue storing all financial values in sats only
   - Perform conversion for display purposes only

## Implementation Notes
1. Make it clear that the platform uses Bitcoin natively
   - Add tooltips explaining that transactions occur in Bitcoin
   - Mark USD values as approximate

2. Performance considerations
   - Cache the exchange rate to avoid excessive API calls
   - Consider implementing a background service for price updates

3. Error handling
   - Provide fallback display when API is unavailable
   - Show clear "approximate" indicators on USD values

## Implementation Scope
- This is a display-only feature for MVP
- Do not implement USD payment processing or Strike API integration at this stage
- Focus on giving users context while maintaining a Bitcoin-native platform

## Testing Requirements
1. Verify price API integration with mock responses
2. Test display formatting with various amount sizes
3. Ensure proper handling of API failures
4. Verify correct currency preference persistence

Please implement this feature with an emphasis on simplicity and clarity. The goal is to provide USD context for users unfamiliar with Bitcoin while maintaining a Bitcoin-native platform for the MVP.